auth:
  adminUser: admin
  adminPassword: <adminpassword here>

# Quay.io image configuration
image:
  registry: docker.io
  repository: bitnami/keycloak
  tag: "latest"
  pullPolicy: IfNotPresent

# PostgreSQL configuration 
postgresql:
  enabled: true
  auth:
    username: bn_keycloak
    password: <keycloak db passwrord here>
    database: bitnami_keycloak

keycloak:
  httpRelativePath: /auth

extraEnvVars:
  - name: KEYCLOAK_EXTRA_ARGS
    value: ""
  - name: KEYCLOAK_HTTP_RELATIVE_PATH
    value: /auth
  - name: KEYCLOAK_FRONTEND_URL
    value: https://change-me/auth
  - name: KC_HOSTNAME
    value: changeme.com
  - name: KC_HOSTNAME_STRICT
    value: "true"
  - name: KC_HOSTNAME_STRICT_HTTPS
    value: "true"
  - name: KEYCLOAK_PROXY
    value: edge
  - name: KC_HTTP_ENABLED
    value: "true"
  - name: KC_HTTP_RELATIVE_PATH
    value: /auth
  - name: KC_HOSTNAME_ADMIN_URL
    value: https://change_me/auth
  - name: KC_HOSTNAME_URL
    value: https://changeme.com/auth
  - name: KC_HOSTNAME_STRICT_BACKCHANNEL
    value: "false"
  - name: KC_SPI_LOGIN_PROTOCOL_OPENID_CONNECT_LEGACY_LOGOUT_REDIRECT_URI
    value: "true"
  - name: KC_PROXY_HEADERS
    value: xforwarded

service:
  type: ClusterIP
  ports:
    http: 80
    https: 443

ingress:
  enabled: false
  path: /auth
  pathType: Prefix
  hostname: changeme.com
  tls: true
  extraTls:
    - secretName: tls-enbw
      hosts:
        - changeme.com
  annotations:
    kubernetes.io/ingress.class: azure-application-gateway
    appgw.ingress.kubernetes.io/backend-path-prefix: /
    appgw.ingress.kubernetes.io/ssl-redirect: "true"
    appgw.ingress.kubernetes.io/health-probe-path: /auth/realms/master

resources:
  requests:
    cpu: 250m
    memory: 512Mi
  limits:
    cpu: 500m
    memory: 1Gi

persistence:
  enabled: true
  storageClass: default
  size: 8Gi

# Security context for Quay.io images
# securityContext:
#   runAsUser: 1000
#   runAsGroup: 1000
#   fsGroup: 1000

# Allow non-standard images (Quay.io)
# global:
#   security:
#     allowInsecureImages: true

# Readiness probe configuration
# readinessProbe:
#   httpGet:
#     path: /auth/realms/master
#     port: http
#   initialDelaySeconds: 30
#   periodSeconds: 10
#   timeoutSeconds: 1
#   failureThreshold: 3

# Liveness probe configuration  
# livenessProbe:
#   tcpSocket:
#     port: http
#   initialDelaySeconds: 300
#   periodSeconds: 1
#   timeoutSeconds: 5
#   failureThreshold: 3

# Readiness ve liveness probe configuration
startupProbe:
  enabled: false
readinessProbe:
  enabled: false
livenessProbe:
  enabled: false
